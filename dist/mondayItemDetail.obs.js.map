{"version":3,"file":"mondayItemDetail.obs.js","sources":["../src/mondayItemDetail/mondayUpdate.partial.obs","../src/mondayItemDetail.obs"],"sourcesContent":["<template>\r\n    <div id=\"mondayUpdate\" class=\"bcc-monday-well-group\">\r\n        <div class=\"well\">\r\n            <p v-text=\"update.textBody\"></p>\r\n            <div>\r\n                <span class=\"font-weight-bold\" v-text=\"update.creatorName\"></span>\r\n                <span v-text=\"update.createdAt\"></span>\r\n            </div>\r\n            <template v-for=\"file in update.files\">\r\n                <MondayFile :file=\"file\"></MondayFile>\r\n            </template>\r\n        </div>\r\n        <template v-for=\"reply in update.replies\" :key=\"reply.Id\">\r\n            <!-- <MondayReply :reply-=\"reply\"></MondayReply> -->\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { PropType, computed, inject, onMounted, ref } from \"vue\";\r\nimport type { MondayUpdateBag, MondayItemDetailBag } from \"../ViewModels/MondayItemDetailBag\";\r\nimport MondayReply from \"./mondayReply.partial.obs\";\r\nimport MondayFile from \"./mondayFile.partial.obs\"\r\n\r\nconst notFound = ref(false);\r\nconst props = defineProps({\r\n    update: {\r\n        type: Object as PropType<MondayUpdateBag>,\r\n        required: true\r\n    }\r\n})\r\n\r\n\r\nconst item = inject(\"mondayItemBag\") as MondayItemDetailBag;\r\nconst updates = item.updates;\r\n\r\n</script>","<template>\r\n    <Panel id=\"pnlItem\" class=\"panel panel-block\">\r\n        <div class=\"panel-heading bcc-monday-panel-heading row\">\r\n            <div class=\"col-xs-6 p-0\">\r\n                <h1 class=\"panel-title d-flex flex-column justify-content-center\">\r\n                    <div v-text=\"item.name\"></div>\r\n                    <div>\r\n                        <span class=\"text-muted\" style=\"font-size: 0.8rem;\" v-text=\"item.createdAt\"></span>\r\n                    </div>\r\n                </h1>\r\n            </div>\r\n            <div class=\"col-xs-6 text-right p-0\">\r\n                <RockButton id=\"bbtnApprove\" class=\"btn btn-secondary\" >Approve Request</RockButton>\r\n                <RockButton id=\"bbtnClose\" class=\"btn btn-secondary\" >Close Request</RockButton>\r\n            </div>\r\n        </div>\r\n        <div class=\"panel-body\" style=\"width:100%\">\r\n            <div class=\"bcc-monday-column-group\">\r\n                <div class=\"d-flex mb-3 flex-wrap\" style=\"justify-content: space-between\">\r\n                    <template v-for=\"columnValue in item.columnValues\" :key=\"columnValue.ColumnId\">\r\n                        <FileColumnValue v-if=\"columnValue.type == 'file'\"></FileColumnValue>\r\n                        <StatusColumnValue v-else-if=\"columnValue.type == 'status'\"></StatusColumnValue>\r\n                        <BasicColumnValue v-else></BasicColumnValue>\r\n                    </template>\r\n                </div>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <!-- <TextBox id=\"tbNewUpdate\" textMode=\"multiline\" class=\"mb-2\" placeholder=\"Write a new update...\"></TextBox> -->\r\n                <RockButton id=\"bbtnNewUpdateOpen\" class=\"btn btn-primary w-100\">New Update</RockButton>\r\n                <div style=\"display: flex; align-items: flex-start; justify-content: space-between; flex-direction: row-reverse;\">\r\n                    <div>\r\n                        <RockButton id=\"bbtnNewUpdateSave\" class=\"btn btn-primary\">Save</RockButton>\r\n                        <RockButton id=\"bbtnNewUpdateCancel\" class=\"btn btn-secondary\">Cancel</RockButton>\r\n                    </div>\r\n                    <div>\r\n                        <div>File Uploader Here</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <template v-for=\"update in item.updates\" :key=\"update.Id\">\r\n               <MondayUpdate :update=\"update\"/>\r\n            </template>\r\n        </div>\r\n    </Panel>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, onMounted, ref } from \"vue\";\r\nimport { onConfigurationValuesChanged, useConfigurationValues, useInvokeBlockAction, useReloadBlock } from \"@Obsidian/Utility/block\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\nimport { BtnSize } from \"@Obsidian/Enums/Controls/btnSize\";\r\nimport Panel from \"@Obsidian/Controls/panel\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport type { MondayItemDetailBag } from \"./ViewModels/MondayItemDetailBag\";\r\nimport MondayUpdate from \"./mondayItemDetail/mondayUpdate.partial.obs\";\r\n\r\nconst notFound = ref(false);\r\nconst config = useConfigurationValues<MondayItemDetailBag>();\r\nconst invokeBlockAction = useInvokeBlockAction();\r\nconst reloadBlock = useReloadBlock();\r\n\r\n//#region Values\r\n\r\nconst isRunning = ref<boolean>(false);\r\nconst runResult = ref<string>(\"\");\r\nconst errorMessage = ref<string>(\"\");\r\nconst lavaTemplate = ref<string>(\"\");\r\nconst item = config;\r\n\r\n//#endregion\r\n\r\n//#region Computed Values\r\n\r\n//#endregion\r\n\r\n//#region Events\r\n\r\nasync function saveUpdate(): Promise<boolean> {\r\n    const errorMessage = \"\";\r\n    const result = await invokeBlockAction(\"SaveUpdate\", {});\r\n\r\n    return false;\r\n}\r\n\r\nasync function saveReply(): Promise<boolean> {\r\n    const errorMessage = \"\";\r\n    const result = await invokeBlockAction(\"SaveReply\", {});\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Event handler for the form being submitted.\r\n */\r\n/*\r\nasync function runLava(): Promise<void> {\r\n    try {\r\n        isRunning.value = true;\r\n        runResult.value = \"\";\r\n        errorMessage.value = \"\";\r\n\r\n        const bag: RunLavaBag = {\r\n            Lava: lavaTemplate.value\r\n        };\r\n\r\n        const result = await invokeBlockAction<string>(\"RunLava\", { runLavaBag: bag });\r\n\r\n        if (result?.isSuccess) {\r\n            isRunning.value = false;\r\n            runResult.value = result.data || \"\";\r\n        }\r\n        else {\r\n            errorMessage.value = result?.errorMessage || \"An unexpected error occurred while saving.\";\r\n        }\r\n    } finally {\r\n        isRunning.value = false;\r\n    }\r\n}\r\n*/\r\n\r\n//#endregion\r\n\r\n//#region Functions\r\n\r\n//#endregion\r\n\r\nonConfigurationValuesChanged(reloadBlock);\r\n\r\n</script>"],"names":["ref","item","inject","updates","config","useConfigurationValues","useInvokeBlockAction","reloadBlock","useReloadBlock","onConfigurationValuesChanged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwBA,IAAiBA,GAAG,CAAC,KAAK,EAAC;MAS3B,IAAA,IAAMC,IAAI,GAAGC,MAAM,CAAC,eAAe,CAAwB,CAAA;MAC3D,IAAgBD,IAAI,CAACE,QAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCwB5B,IAAiBH,GAAG,CAAC,KAAK,EAAC;UAC3B,IAAMI,MAAM,GAAGC,sBAAsB,EAAuB,CAAA;UAClCC,oBAAoB,GAAE;UAChD,IAAMC,WAAW,GAAGC,cAAc,EAAE,CAAA;MAIpC,IAAkBR,GAAG,CAAU,KAAK,EAAC;MACrC,IAAkBA,GAAG,CAAS,EAAE,EAAC;MACjC,IAAqBA,GAAG,CAAS,EAAE,EAAC;MACpC,IAAqBA,GAAG,CAAS,EAAE,EAAC;UACpC,IAAMC,IAAI,GAAGG,MAAM,CAAA;UA2DnBK,4BAA4B,CAACF,WAAW,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}